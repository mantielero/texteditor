/* Generated by the Nim Compiler v2.0.2 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function eqStrings(a_33557041, b_33557042) {
        if (a_33557041 == b_33557042) return true;
    if (a_33557041 === null && b_33557042.length == 0) return true;
    if (b_33557042 === null && a_33557041.length == 0) return true;
    if ((!a_33557041) || (!b_33557042)) return false;
    var alen = a_33557041.length;
    if (alen != b_33557042.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33557041[i] != b_33557042[i]) return false;
    return true;
  

  
}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
var objectID_754974897 = [0];

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }
  return result_33556922;

}

function newQuill_1023410201(id_1023410202, theme_1023410203, placeholder_1023410204, debug_1023410205) {
  var result_1023410206 = null;

    var config_1023410207 = {};
    config_1023410207["theme"] = toJSStr(theme_1023410203);
    if (!(eqStrings(placeholder_1023410204, []))) {
    config_1023410207["placeholder"] = toJSStr(placeholder_1023410204);
    }
    
    if (!(eqStrings(debug_1023410205, []))) {
    config_1023410207["debug"] = debug_1023410205;
    }
    
    result_1023410206 = new Quill(toJSStr(id_1023410202), config_1023410207);

  return result_1023410206;

}

function getLine_1023410290(api_1023410291, index_1023410292) {
  var result_1023410295 = {Field0: null, Field1: 0};

    var tmp_1023410296 = api_1023410291.getLine(((index_1023410292) | 0));

  return result_1023410295;

}

function onTextChangeCallback_553648133(delta_553648134, oldDelta_553648135, source_553648136) {
    if ((source_553648136 == "api")) {
    rawEcho([65,80,73]);
    }
    else {
    if ((source_553648136 == "user")) {
    rawEcho([85,83,69,82]);
    var line_553648137 = getLine_1023410290(q_553648132, 1)["Field0"];
    rawEcho([66,108,111,116,32,110,97,109,101,58]);
    rawEcho(cstrToNimstr(line_553648137.blotName));
    rawEcho([101,110,100]);
    }
    }

  
}

function deleteText_1023410241(api_1023410242, index_1023410243, length_1023410244, source_1023410245) {
  var result_1023410246 = null;

    result_1023410246 = api_1023410242.deleteText(((index_1023410243) | 0), ((length_1023410244) | 0), source_1023410245);

  return result_1023410246;

}
var q_553648132 = newQuill_1023410201([35,101,100,105,116,111,114], [98,117,98,98,108,101], [], [105,110,102,111]);
q_553648132.on("text-change", onTextChangeCallback_553648133);
var delta_553648171 = [deleteText_1023410241(q_553648132, 5, 6, "api")];
